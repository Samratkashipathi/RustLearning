{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6","program":"C:\\Users\\SamratKS\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bstr","C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"memchr\"","--cfg","feature=\"regex-automata\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde1\"","--cfg","feature=\"serde1-nostd\"","--cfg","feature=\"std\"","--cfg","feature=\"unicode\"","-C","metadata=adee91cd9ca59833","-C","extra-filename=-adee91cd9ca59833","--out-dir","c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps","--extern","lazy_static=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps\\liblazy_static-d14a21bca07636e8.rmeta","--extern","memchr=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps\\libmemchr-98a5e1aca3f441c5.rmeta","--extern","regex_automata=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps\\libregex_automata-d6bf2f0896b90e21.rmeta","--extern","serde=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps\\libserde-c78e446833272a98.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\SamratKS\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\csv-reading\\target\\rls\\debug\\deps\\libbstr-adee91cd9ca59833.rmeta"},"prelude":{"crate_id":{"name":"bstr","disambiguator":[17214483501028025230,12674953516419549084]},"crate_root":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src","external_crates":[{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":12,"id":{"name":"lazy_static","disambiguator":[8311875922454522998,15465922901661398489]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":13,"id":{"name":"memchr","disambiguator":[11874916751457115323,13773522750246287168]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":14,"id":{"name":"libc","disambiguator":[12284876976581784353,18237272573281608575]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":15,"id":{"name":"regex_automata","disambiguator":[3866520302095544762,1100993103027165082]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[9162974864748630302,12435571796795162717]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","num":17,"id":{"name":"serde","disambiguator":[14673770029697449815,18295627796991698278]}}],"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":0,"byte_end":20253,"line_start":1,"line_end":456,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18560,"byte_end":18564,"line_start":389,"line_end":389,"column_start":15,"column_end":19},"alias_span":null,"name":"BStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18607,"byte_end":18614,"line_start":391,"line_end":391,"column_start":18,"column_end":25},"alias_span":null,"name":"BString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18641,"byte_end":18650,"line_start":393,"line_end":393,"column_start":5,"column_end":14},"alias_span":null,"name":"ByteSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18652,"byte_end":18657,"line_start":393,"line_end":393,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18659,"byte_end":18665,"line_start":393,"line_end":393,"column_start":23,"column_end":29},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18667,"byte_end":18677,"line_start":393,"line_end":393,"column_start":31,"column_end":41},"alias_span":null,"name":"FieldsWith","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18679,"byte_end":18683,"line_start":393,"line_end":393,"column_start":43,"column_end":47},"alias_span":null,"name":"Find","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18685,"byte_end":18696,"line_start":393,"line_end":393,"column_start":49,"column_end":60},"alias_span":null,"name":"FindReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18698,"byte_end":18704,"line_start":393,"line_end":393,"column_start":62,"column_end":68},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18710,"byte_end":18723,"line_start":394,"line_end":394,"column_start":5,"column_end":18},"alias_span":null,"name":"FinderReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18725,"byte_end":18730,"line_start":394,"line_end":394,"column_start":20,"column_end":25},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18732,"byte_end":18751,"line_start":394,"line_end":394,"column_start":27,"column_end":46},"alias_span":null,"name":"LinesWithTerminator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18753,"byte_end":18758,"line_start":394,"line_end":394,"column_start":48,"column_end":53},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18760,"byte_end":18766,"line_start":394,"line_end":394,"column_start":55,"column_end":61},"alias_span":null,"name":"SplitN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18768,"byte_end":18781,"line_start":394,"line_end":394,"column_start":63,"column_end":76},"alias_span":null,"name":"SplitNReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18787,"byte_end":18799,"line_start":395,"line_end":395,"column_start":5,"column_end":17},"alias_span":null,"name":"SplitReverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18801,"byte_end":18802,"line_start":395,"line_end":395,"column_start":19,"column_end":20},"alias_span":null,"name":"B","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18849,"byte_end":18855,"line_start":398,"line_end":398,"column_start":19,"column_end":25},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18857,"byte_end":18861,"line_start":398,"line_end":398,"column_start":27,"column_end":31},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18863,"byte_end":18870,"line_start":398,"line_end":398,"column_start":33,"column_end":40},"alias_span":null,"name":"ByteVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18872,"byte_end":18882,"line_start":398,"line_end":398,"column_start":42,"column_end":52},"alias_span":null,"name":"DrainBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18884,"byte_end":18897,"line_start":398,"line_end":398,"column_start":54,"column_end":67},"alias_span":null,"name":"FromUtf8Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18951,"byte_end":18966,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"alias_span":null,"name":"GraphemeIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18968,"byte_end":18977,"line_start":401,"line_end":401,"column_start":22,"column_end":31},"alias_span":null,"name":"Graphemes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18979,"byte_end":18994,"line_start":401,"line_end":401,"column_start":33,"column_end":48},"alias_span":null,"name":"SentenceIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18996,"byte_end":19005,"line_start":401,"line_end":401,"column_start":50,"column_end":59},"alias_span":null,"name":"Sentences","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19007,"byte_end":19018,"line_start":401,"line_end":401,"column_start":61,"column_end":72},"alias_span":null,"name":"WordIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19024,"byte_end":19029,"line_start":402,"line_end":402,"column_start":5,"column_end":10},"alias_span":null,"name":"Words","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19031,"byte_end":19052,"line_start":402,"line_end":402,"column_start":12,"column_end":33},"alias_span":null,"name":"WordsWithBreakIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19054,"byte_end":19069,"line_start":402,"line_end":402,"column_start":35,"column_end":50},"alias_span":null,"name":"WordsWithBreaks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19094,"byte_end":19100,"line_start":405,"line_end":405,"column_start":5,"column_end":11},"alias_span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19104,"byte_end":19115,"line_start":405,"line_end":405,"column_start":15,"column_end":26},"name":"decode_utf8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19117,"byte_end":19128,"line_start":405,"line_end":405,"column_start":28,"column_end":39},"alias_span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19132,"byte_end":19148,"line_start":405,"line_end":405,"column_start":43,"column_end":59},"name":"decode_last_utf8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19150,"byte_end":19161,"line_start":405,"line_end":405,"column_start":61,"column_end":72},"alias_span":null,"name":"CharIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19167,"byte_end":19172,"line_start":406,"line_end":406,"column_start":5,"column_end":10},"alias_span":null,"name":"Chars","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19174,"byte_end":19183,"line_start":406,"line_end":406,"column_start":12,"column_end":21},"alias_span":null,"name":"Utf8Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":0,"byte_end":20253,"line_start":1,"line_end":456,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":35},{"krate":0,"index":41},{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":68},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":127},{"krate":0,"index":145},{"krate":0,"index":418},{"krate":0,"index":511},{"krate":0,"index":743},{"krate":0,"index":760},{"krate":0,"index":821},{"krate":0,"index":949}],"decl_id":null,"docs":"An experimental byte string library.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":18193,"byte_end":18213,"line_start":370,"line_end":370,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\bstr.rs","byte_start":33469,"byte_end":33473,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"BStr","qualname":"::bstr::BStr","value":"BStr {  }","parent":null,"children":[{"krate":0,"index":1006}],"decl_id":null,"docs":" A wrapper for `&[u8]` that provides convenient string oriented trait impls.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\bstring.rs","byte_start":35523,"byte_end":35530,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"BString","qualname":"::bstring::BString","value":"BString {  }","parent":null,"children":[{"krate":0,"index":1011}],"decl_id":null,"docs":" A wrapper for `Vec<u8>` that provides convenient string oriented trait\n impls.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":53410,"byte_end":53411,"line_start":76,"line_end":76,"column_start":8,"column_end":9},"name":"B","qualname":"::ext_slice::B","value":"fn <'a, B> (bytes: &'a B) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" A short-hand constructor for building a `&[u8]`.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":53368,"byte_end":53392,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":53393,"byte_end":53402,"line_start":75,"line_end":75,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":53755,"byte_end":53761,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::ext_slice::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Ensure that callers cannot implement `ByteSlice` by making an\n umplementable trait its super trait.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":53872,"byte_end":53881,"line_start":95,"line_end":95,"column_start":11,"column_end":20},"name":"ByteSlice","qualname":"::ext_slice::ByteSlice","value":"ByteSlice: Sealed","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" A trait that extends a slice of bytes with string oriented methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":54107,"byte_end":54115,"line_start":100,"line_end":100,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::ext_slice::ByteSlice::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" A method for accessing the raw bytes of this type. This is always a\n no-op and callers shouldn't care about it. This only exists for making\n the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":54358,"byte_end":54370,"line_start":106,"line_end":106,"column_start":8,"column_end":20},"name":"as_bytes_mut","qualname":"::ext_slice::ByteSlice::as_bytes_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" A method for accessing the raw bytes of this type, mutably. This is\n always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":54957,"byte_end":54964,"line_start":125,"line_end":125,"column_start":8,"column_end":15},"name":"as_bstr","qualname":"::ext_slice::ByteSlice::as_bstr","value":"fn (&self) -> &BStr","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return this byte slice as a `&BStr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":55634,"byte_end":55645,"line_start":147,"line_end":147,"column_start":8,"column_end":19},"name":"as_bstr_mut","qualname":"::ext_slice::ByteSlice::as_bstr_mut","value":"fn (&mut self) -> &mut BStr","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return this byte slice as a `&mut BStr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":56489,"byte_end":56500,"line_start":174,"line_end":174,"column_start":8,"column_end":19},"name":"from_os_str","qualname":"::ext_slice::ByteSlice::from_os_str","value":"fn (os_str: &OsStr) -> Option<&[u8]>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Create an immutable byte string from an OS string slice.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":56444,"byte_end":56467,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":56472,"byte_end":56481,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":57641,"byte_end":57650,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"from_path","qualname":"::ext_slice::ByteSlice::from_path","value":"fn (path: &Path) -> Option<&[u8]>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Create an immutable byte string from a file path.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":57596,"byte_end":57619,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":57624,"byte_end":57633,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":58770,"byte_end":58776,"line_start":247,"line_end":247,"column_start":8,"column_end":14},"name":"to_str","qualname":"::ext_slice::ByteSlice::to_str","value":"fn (&self) -> Result<&str, Utf8Error>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Safely convert this byte string into a `&str` if it's valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":58753,"byte_end":58762,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":60051,"byte_end":60067,"line_start":281,"line_end":281,"column_start":15,"column_end":31},"name":"to_str_unchecked","qualname":"::ext_slice::ByteSlice::to_str_unchecked","value":"fn (&self) -> &str","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Unsafely convert this byte string into a `&str`, without checking for\n valid UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":62953,"byte_end":62965,"line_start":346,"line_end":346,"column_start":8,"column_end":20},"name":"to_str_lossy","qualname":"::ext_slice::ByteSlice::to_str_lossy","value":"fn (&self) -> Cow<str>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Convert this byte string to a valid UTF-8 string by replacing invalid\n UTF-8 bytes with the Unicode replacement codepoint (`U+FFFD`).","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":62908,"byte_end":62931,"line_start":344,"line_end":344,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":62936,"byte_end":62945,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":65124,"byte_end":65141,"line_start":403,"line_end":403,"column_start":8,"column_end":25},"name":"to_str_lossy_into","qualname":"::ext_slice::ByteSlice::to_str_lossy_into","value":"fn (&self, dest: &mut String) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Copy the contents of this byte string into the given owned string\n buffer, while replacing invalid UTF-8 code unit sequences with the\n Unicode replacement codepoint (`U+FFFD`).","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":65079,"byte_end":65102,"line_start":401,"line_end":401,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":65107,"byte_end":65116,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":66935,"byte_end":66944,"line_start":450,"line_end":450,"column_start":8,"column_end":17},"name":"to_os_str","qualname":"::ext_slice::ByteSlice::to_os_str","value":"fn (&self) -> Result<&OsStr, Utf8Error>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Create an OS string slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":66890,"byte_end":66913,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":66918,"byte_end":66927,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":68159,"byte_end":68174,"line_start":490,"line_end":490,"column_start":8,"column_end":23},"name":"to_os_str_lossy","qualname":"::ext_slice::ByteSlice::to_os_str_lossy","value":"fn (&self) -> Cow<OsStr>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Lossily create an OS string slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":68114,"byte_end":68137,"line_start":488,"line_end":488,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":68142,"byte_end":68151,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":69505,"byte_end":69512,"line_start":534,"line_end":534,"column_start":8,"column_end":15},"name":"to_path","qualname":"::ext_slice::ByteSlice::to_path","value":"fn (&self) -> Result<&Path, Utf8Error>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Create a path slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":69460,"byte_end":69483,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":69488,"byte_end":69497,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":70390,"byte_end":70403,"line_start":561,"line_end":561,"column_start":8,"column_end":21},"name":"to_path_lossy","qualname":"::ext_slice::ByteSlice::to_path_lossy","value":"fn (&self) -> Cow<Path>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Lossily create a path slice from this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":70345,"byte_end":70368,"line_start":559,"line_end":559,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":70373,"byte_end":70382,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":71117,"byte_end":71124,"line_start":589,"line_end":589,"column_start":8,"column_end":15},"name":"repeatn","qualname":"::ext_slice::ByteSlice::repeatn","value":"fn (&self, n: usize) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Create a new byte string by repeating this byte string `n` times.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":71072,"byte_end":71095,"line_start":587,"line_end":587,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":71100,"byte_end":71109,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":71731,"byte_end":71743,"line_start":612,"line_end":612,"column_start":8,"column_end":20},"name":"contains_str","qualname":"::ext_slice::ByteSlice::contains_str","value":"fn <B> (&self, needle: B) -> bool","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string contains the given needle.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":71714,"byte_end":71723,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":72209,"byte_end":72224,"line_start":630,"line_end":630,"column_start":8,"column_end":23},"name":"starts_with_str","qualname":"::ext_slice::ByteSlice::starts_with_str","value":"fn <B> (&self, prefix: B) -> bool","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string has the given prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":72192,"byte_end":72201,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":72701,"byte_end":72714,"line_start":648,"line_end":648,"column_start":8,"column_end":21},"name":"ends_with_str","qualname":"::ext_slice::ByteSlice::ends_with_str","value":"fn <B> (&self, suffix: B) -> bool","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns true if and only if this byte string has the given suffix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":72684,"byte_end":72693,"line_start":647,"line_end":647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":74100,"byte_end":74112,"line_start":685,"line_end":685,"column_start":8,"column_end":20},"name":"find_byteset","qualname":"::ext_slice::ByteSlice::find_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of any of the bytes in the\n provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":74083,"byte_end":74092,"line_start":684,"line_end":684,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":75547,"byte_end":75563,"line_start":722,"line_end":722,"column_start":8,"column_end":24},"name":"find_not_byteset","qualname":"::ext_slice::ByteSlice::find_not_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of a byte that is not a member\n of the provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":75530,"byte_end":75539,"line_start":721,"line_end":721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":76976,"byte_end":76989,"line_start":759,"line_end":759,"column_start":8,"column_end":21},"name":"rfind_byteset","qualname":"::ext_slice::ByteSlice::rfind_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of any of the bytes in the\n provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":76959,"byte_end":76968,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":78427,"byte_end":78444,"line_start":796,"line_end":796,"column_start":8,"column_end":25},"name":"rfind_not_byteset","qualname":"::ext_slice::ByteSlice::rfind_not_byteset","value":"fn <B> (&self, byteset: B) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of a byte that is not a member\n of the provided set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":78410,"byte_end":78419,"line_start":795,"line_end":795,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":79668,"byte_end":79672,"line_start":831,"line_end":831,"column_start":8,"column_end":12},"name":"find","qualname":"::ext_slice::ByteSlice::find","value":"fn <B> (&self, needle: B) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given needle.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":79651,"byte_end":79660,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":80960,"byte_end":80965,"line_start":868,"line_end":868,"column_start":8,"column_end":13},"name":"rfind","qualname":"::ext_slice::ByteSlice::rfind","value":"fn <B> (&self, needle: B) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given needle.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":80943,"byte_end":80952,"line_start":867,"line_end":867,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":82338,"byte_end":82347,"line_start":910,"line_end":910,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::ext_slice::ByteSlice::find_iter","value":"fn <'a, B> (&'a self, needle: &'a B) -> Find<'a>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator of the non-overlapping occurrences of the given\n needle. The iterator yields byte offset positions indicating the start\n of each match.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":82321,"byte_end":82330,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":83757,"byte_end":83767,"line_start":955,"line_end":955,"column_start":8,"column_end":18},"name":"rfind_iter","qualname":"::ext_slice::ByteSlice::rfind_iter","value":"fn <'a, B> (&'a self, needle: &'a B) -> FindReverse<'a>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator of the non-overlapping occurrences of the given\n needle in reverse. The iterator yields byte offset positions indicating\n the start of each match.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":83740,"byte_end":83749,"line_start":954,"line_end":954,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":84348,"byte_end":84357,"line_start":976,"line_end":976,"column_start":8,"column_end":17},"name":"find_byte","qualname":"::ext_slice::ByteSlice::find_byte","value":"fn (&self, byte: u8) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given byte. If the\n byte does not occur in this byte string, then `None` is returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":84331,"byte_end":84340,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":84856,"byte_end":84866,"line_start":994,"line_end":994,"column_start":8,"column_end":18},"name":"rfind_byte","qualname":"::ext_slice::ByteSlice::rfind_byte","value":"fn (&self, byte: u8) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given byte. If the\n byte does not occur in this byte string, then `None` is returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":84839,"byte_end":84848,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":85657,"byte_end":85666,"line_start":1018,"line_end":1018,"column_start":8,"column_end":17},"name":"find_char","qualname":"::ext_slice::ByteSlice::find_char","value":"fn (&self, ch: char) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of the given codepoint.\n If the codepoint does not occur in this byte string, then `None` is\n returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":85640,"byte_end":85649,"line_start":1017,"line_end":1017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":86467,"byte_end":86477,"line_start":1042,"line_end":1042,"column_start":8,"column_end":18},"name":"rfind_char","qualname":"::ext_slice::ByteSlice::rfind_char","value":"fn (&self, ch: char) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of the given codepoint.\n If the codepoint does not occur in this byte string, then `None` is\n returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":86450,"byte_end":86459,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":87220,"byte_end":87226,"line_start":1069,"line_end":1069,"column_start":8,"column_end":14},"name":"fields","qualname":"::ext_slice::ByteSlice::fields","value":"fn (&self) -> Fields","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the fields in a byte string, separated by\n contiguous whitespace.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":87203,"byte_end":87212,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":88208,"byte_end":88219,"line_start":1101,"line_end":1101,"column_start":8,"column_end":19},"name":"fields_with","qualname":"::ext_slice::ByteSlice::fields_with","value":"fn <F> (&self, f: F) -> FieldsWith<F>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the fields in a byte string, separated by\n contiguous codepoints satisfying the given predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":88191,"byte_end":88200,"line_start":1100,"line_end":1100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":91446,"byte_end":91455,"line_start":1194,"line_end":1194,"column_start":8,"column_end":17},"name":"split_str","qualname":"::ext_slice::ByteSlice::split_str","value":"fn <'a, B> (&'a self, splitter: &'a B) -> Split<'a>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of this byte string, separated\n by the given byte string. Each element yielded is guaranteed not to\n include the splitter substring.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":91429,"byte_end":91438,"line_start":1193,"line_end":1193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":94675,"byte_end":94685,"line_start":1288,"line_end":1288,"column_start":8,"column_end":18},"name":"rsplit_str","qualname":"::ext_slice::ByteSlice::rsplit_str","value":"fn <'a, B> (&'a self, splitter: &'a B) -> SplitReverse<'a>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of this byte string, separated by\n the given byte string, in reverse. Each element yielded is guaranteed\n not to include the splitter substring.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":94658,"byte_end":94667,"line_start":1287,"line_end":1287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":96170,"byte_end":96180,"line_start":1328,"line_end":1328,"column_start":8,"column_end":18},"name":"splitn_str","qualname":"::ext_slice::ByteSlice::splitn_str","value":"fn <'a, B> (&'a self, limit: usize, splitter: &'a B) -> SplitN<'a>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of this byte string,\n separated by the given byte string. If `limit` substrings are yielded,\n then the last substring will contain the remainder of this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":96153,"byte_end":96162,"line_start":1327,"line_end":1327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":97720,"byte_end":97731,"line_start":1371,"line_end":1371,"column_start":8,"column_end":19},"name":"rsplitn_str","qualname":"::ext_slice::ByteSlice::rsplitn_str","value":"fn <'a, B> (&'a self, limit: usize, splitter: &'a B) -> SplitNReverse<'a>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of this byte string,\n separated by the given byte string, in reverse. If `limit` substrings\n are yielded, then the last substring will contain the remainder of this\n byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":97703,"byte_end":97712,"line_start":1370,"line_end":1370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":98920,"byte_end":98927,"line_start":1415,"line_end":1415,"column_start":8,"column_end":15},"name":"replace","qualname":"::ext_slice::ByteSlice::replace","value":"fn <N, R> (&self, needle: N, replacement: R) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Replace all matches of the given needle with the given replacement, and\n the result as a new `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":98875,"byte_end":98898,"line_start":1413,"line_end":1413,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":98903,"byte_end":98912,"line_start":1414,"line_end":1414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":100153,"byte_end":100161,"line_start":1461,"line_end":1461,"column_start":8,"column_end":16},"name":"replacen","qualname":"::ext_slice::ByteSlice::replacen","value":"fn <N, R> (&self, needle: N, replacement: R, limit: usize) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Replace up to `limit` matches of the given needle with the given\n replacement, and the result as a new `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":100108,"byte_end":100131,"line_start":1459,"line_end":1459,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":100136,"byte_end":100145,"line_start":1460,"line_end":1460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":101712,"byte_end":101724,"line_start":1519,"line_end":1519,"column_start":8,"column_end":20},"name":"replace_into","qualname":"::ext_slice::ByteSlice::replace_into","value":"fn <N, R> (&self, needle: N, replacement: R, dest: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Replace all matches of the given needle with the given replacement,\n and write the result into the provided `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":101667,"byte_end":101690,"line_start":1517,"line_end":1517,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":101695,"byte_end":101704,"line_start":1518,"line_end":1518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":103455,"byte_end":103468,"line_start":1583,"line_end":1583,"column_start":8,"column_end":21},"name":"replacen_into","qualname":"::ext_slice::ByteSlice::replacen_into","value":"fn <N, R> (&self, needle: N, replacement: R, limit: usize, dest: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Replace up to `limit` matches of the given needle with the given\n replacement, and write the result into the provided `Vec<u8>`.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":103410,"byte_end":103433,"line_start":1581,"line_end":1581,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":103438,"byte_end":103447,"line_start":1582,"line_end":1582,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":104305,"byte_end":104310,"line_start":1615,"line_end":1615,"column_start":8,"column_end":13},"name":"bytes","qualname":"::ext_slice::ByteSlice::bytes","value":"fn (&self) -> Bytes","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the bytes in this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":104288,"byte_end":104297,"line_start":1614,"line_end":1614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":105247,"byte_end":105252,"line_start":1645,"line_end":1645,"column_start":8,"column_end":13},"name":"chars","qualname":"::ext_slice::ByteSlice::chars","value":"fn (&self) -> Chars","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the Unicode scalar values in this byte string.\n If invalid UTF-8 is encountered, then the Unicode replacement codepoint\n is yielded instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":105230,"byte_end":105239,"line_start":1644,"line_end":1644,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":107130,"byte_end":107142,"line_start":1700,"line_end":1700,"column_start":8,"column_end":20},"name":"char_indices","qualname":"::ext_slice::ByteSlice::char_indices","value":"fn (&self) -> CharIndices","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the Unicode scalar values in this byte string\n along with their starting and ending byte index positions. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":107113,"byte_end":107122,"line_start":1699,"line_end":1699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":108185,"byte_end":108194,"line_start":1732,"line_end":1732,"column_start":8,"column_end":17},"name":"graphemes","qualname":"::ext_slice::ByteSlice::graphemes","value":"fn (&self) -> Graphemes","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the grapheme clusters in this byte string.\n If invalid UTF-8 is encountered, then the Unicode replacement codepoint\n is yielded instead.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":108136,"byte_end":108163,"line_start":1730,"line_end":1730,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":108168,"byte_end":108177,"line_start":1731,"line_end":1731,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":109713,"byte_end":109729,"line_start":1776,"line_end":1776,"column_start":8,"column_end":24},"name":"grapheme_indices","qualname":"::ext_slice::ByteSlice::grapheme_indices","value":"fn (&self) -> GraphemeIndices","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the grapheme clusters in this byte string\n along with their starting and ending byte index positions. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":109664,"byte_end":109691,"line_start":1774,"line_end":1774,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":109696,"byte_end":109705,"line_start":1775,"line_end":1775,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":111097,"byte_end":111102,"line_start":1812,"line_end":1812,"column_start":8,"column_end":13},"name":"words","qualname":"::ext_slice::ByteSlice::words","value":"fn (&self) -> Words","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the words in this byte string. If invalid\n UTF-8 is encountered, then the Unicode replacement codepoint is yielded\n instead.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":111048,"byte_end":111075,"line_start":1810,"line_end":1810,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":111080,"byte_end":111089,"line_start":1811,"line_end":1811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":112497,"byte_end":112509,"line_start":1850,"line_end":1850,"column_start":8,"column_end":20},"name":"word_indices","qualname":"::ext_slice::ByteSlice::word_indices","value":"fn (&self) -> WordIndices","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the words in this byte string along with\n their starting and ending byte index positions.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":112448,"byte_end":112475,"line_start":1848,"line_end":1848,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":112480,"byte_end":112489,"line_start":1849,"line_end":1849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":113662,"byte_end":113679,"line_start":1880,"line_end":1880,"column_start":8,"column_end":25},"name":"words_with_breaks","qualname":"::ext_slice::ByteSlice::words_with_breaks","value":"fn (&self) -> WordsWithBreaks","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the words in this byte string, along with\n all breaks between the words. Concatenating all elements yielded by\n the iterator results in the original string (modulo Unicode replacement\n codepoint substitutions if invalid UTF-8 is encountered).","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":113613,"byte_end":113640,"line_start":1878,"line_end":1878,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":113645,"byte_end":113654,"line_start":1879,"line_end":1879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":114953,"byte_end":114977,"line_start":1917,"line_end":1917,"column_start":8,"column_end":32},"name":"words_with_break_indices","qualname":"::ext_slice::ByteSlice::words_with_break_indices","value":"fn (&self) -> WordsWithBreakIndices","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the words and their byte offsets in this\n byte string, along with all breaks between the words. Concatenating\n all elements yielded by the iterator results in the original string\n (modulo Unicode replacement codepoint substitutions if invalid UTF-8 is\n encountered).","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":114904,"byte_end":114931,"line_start":1915,"line_end":1915,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":114936,"byte_end":114945,"line_start":1916,"line_end":1916,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":116086,"byte_end":116095,"line_start":1949,"line_end":1949,"column_start":8,"column_end":17},"name":"sentences","qualname":"::ext_slice::ByteSlice::sentences","value":"fn (&self) -> Sentences","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the sentences in this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":116037,"byte_end":116064,"line_start":1947,"line_end":1947,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":116069,"byte_end":116078,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":117310,"byte_end":117326,"line_start":1983,"line_end":1983,"column_start":8,"column_end":24},"name":"sentence_indices","qualname":"::ext_slice::ByteSlice::sentence_indices","value":"fn (&self) -> SentenceIndices","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns an iterator over the sentences in this byte string along with\n their starting and ending byte index positions.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":117261,"byte_end":117288,"line_start":1981,"line_end":1981,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":117293,"byte_end":117302,"line_start":1982,"line_end":1982,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":118016,"byte_end":118021,"line_start":2014,"line_end":2014,"column_start":8,"column_end":13},"name":"lines","qualname":"::ext_slice::ByteSlice::lines","value":"fn (&self) -> Lines","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" An iterator over all lines in a byte string, without their\n terminators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":117999,"byte_end":118008,"line_start":2013,"line_end":2013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":119181,"byte_end":119202,"line_start":2058,"line_end":2058,"column_start":8,"column_end":29},"name":"lines_with_terminator","qualname":"::ext_slice::ByteSlice::lines_with_terminator","value":"fn (&self) -> LinesWithTerminator","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" An iterator over all lines in a byte string, including their\n terminators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":119164,"byte_end":119173,"line_start":2057,"line_end":2057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":119761,"byte_end":119765,"line_start":2080,"line_end":2080,"column_start":8,"column_end":12},"name":"trim","qualname":"::ext_slice::ByteSlice::trim","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading and trailing whitespace\n removed.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":119712,"byte_end":119739,"line_start":2078,"line_end":2078,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":119744,"byte_end":119753,"line_start":2079,"line_end":2079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":120294,"byte_end":120304,"line_start":2101,"line_end":2101,"column_start":8,"column_end":18},"name":"trim_start","qualname":"::ext_slice::ByteSlice::trim_start","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading whitespace removed.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":120245,"byte_end":120272,"line_start":2099,"line_end":2099,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":120277,"byte_end":120286,"line_start":2100,"line_end":2100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":120875,"byte_end":120883,"line_start":2123,"line_end":2123,"column_start":8,"column_end":16},"name":"trim_end","qualname":"::ext_slice::ByteSlice::trim_end","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return a byte string slice with trailing whitespace removed.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":120826,"byte_end":120853,"line_start":2121,"line_end":2121,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":120858,"byte_end":120867,"line_start":2122,"line_end":2122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":121368,"byte_end":121377,"line_start":2142,"line_end":2142,"column_start":8,"column_end":17},"name":"trim_with","qualname":"::ext_slice::ByteSlice::trim_with","value":"fn <F> (&self, mut trim: F) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading and trailing characters\n satisfying the given predicate removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":121351,"byte_end":121360,"line_start":2141,"line_end":2141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":121873,"byte_end":121888,"line_start":2160,"line_end":2160,"column_start":8,"column_end":23},"name":"trim_start_with","qualname":"::ext_slice::ByteSlice::trim_start_with","value":"fn <F> (&self, mut trim: F) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return a byte string slice with leading characters satisfying the given\n predicate removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":121856,"byte_end":121865,"line_start":2159,"line_end":2159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":122472,"byte_end":122485,"line_start":2183,"line_end":2183,"column_start":8,"column_end":21},"name":"trim_end_with","qualname":"::ext_slice::ByteSlice::trim_end_with","value":"fn <F> (&self, mut trim: F) -> &[u8]","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Return a byte string slice with trailing characters satisfying the\n given predicate removed.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":122455,"byte_end":122464,"line_start":2182,"line_end":2182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":124268,"byte_end":124280,"line_start":2239,"line_end":2239,"column_start":8,"column_end":20},"name":"to_lowercase","qualname":"::ext_slice::ByteSlice::to_lowercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the lowercase equivalent of this\n byte string.","sig":null,"attributes":[{"value":"cfg(all(feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":124197,"byte_end":124246,"line_start":2237,"line_end":2237,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":124251,"byte_end":124260,"line_start":2238,"line_end":2238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":126181,"byte_end":126198,"line_start":2301,"line_end":2301,"column_start":8,"column_end":25},"name":"to_lowercase_into","qualname":"::ext_slice::ByteSlice::to_lowercase_into","value":"fn (&self, buf: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Writes the lowercase equivalent of this byte string into the given\n buffer. The buffer is not cleared before written to.","sig":null,"attributes":[{"value":"cfg(all(feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":126110,"byte_end":126159,"line_start":2299,"line_end":2299,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":126164,"byte_end":126173,"line_start":2300,"line_end":2300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":128146,"byte_end":128164,"line_start":2356,"line_end":2356,"column_start":8,"column_end":26},"name":"to_ascii_lowercase","qualname":"::ext_slice::ByteSlice::to_ascii_lowercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the ASCII lowercase equivalent of\n this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":128101,"byte_end":128124,"line_start":2354,"line_end":2354,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":128129,"byte_end":128138,"line_start":2355,"line_end":2355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":129219,"byte_end":129239,"line_start":2391,"line_end":2391,"column_start":8,"column_end":28},"name":"make_ascii_lowercase","qualname":"::ext_slice::ByteSlice::make_ascii_lowercase","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Convert this byte string to its lowercase ASCII equivalent in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":129202,"byte_end":129211,"line_start":2390,"line_end":2390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":130820,"byte_end":130832,"line_start":2442,"line_end":2442,"column_start":8,"column_end":20},"name":"to_uppercase","qualname":"::ext_slice::ByteSlice::to_uppercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the uppercase equivalent of this\n byte string.","sig":null,"attributes":[{"value":"cfg(all(feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":130749,"byte_end":130798,"line_start":2440,"line_end":2440,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":130803,"byte_end":130812,"line_start":2441,"line_end":2441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":132684,"byte_end":132701,"line_start":2504,"line_end":2504,"column_start":8,"column_end":25},"name":"to_uppercase_into","qualname":"::ext_slice::ByteSlice::to_uppercase_into","value":"fn (&self, buf: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Writes the uppercase equivalent of this byte string into the given\n buffer. The buffer is not cleared before written to.","sig":null,"attributes":[{"value":"cfg(all(feature = \"std\", feature = \"unicode\"))","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":132613,"byte_end":132662,"line_start":2502,"line_end":2502,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":132667,"byte_end":132676,"line_start":2503,"line_end":2503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":134560,"byte_end":134578,"line_start":2556,"line_end":2556,"column_start":8,"column_end":26},"name":"to_ascii_uppercase","qualname":"::ext_slice::ByteSlice::to_ascii_uppercase","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns a new `Vec<u8>` containing the ASCII uppercase equivalent of\n this byte string.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":134515,"byte_end":134538,"line_start":2554,"line_end":2554,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":134543,"byte_end":134552,"line_start":2555,"line_end":2555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":135630,"byte_end":135650,"line_start":2591,"line_end":2591,"column_start":8,"column_end":28},"name":"make_ascii_uppercase","qualname":"::ext_slice::ByteSlice::make_ascii_uppercase","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Convert this byte string to its uppercase ASCII equivalent in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":135613,"byte_end":135622,"line_start":2590,"line_end":2590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":136517,"byte_end":136530,"line_start":2618,"line_end":2618,"column_start":8,"column_end":21},"name":"reverse_bytes","qualname":"::ext_slice::ByteSlice::reverse_bytes","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Reverse the bytes in this string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":136500,"byte_end":136509,"line_start":2617,"line_end":2617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":138935,"byte_end":138948,"line_start":2689,"line_end":2689,"column_start":8,"column_end":21},"name":"reverse_chars","qualname":"::ext_slice::ByteSlice::reverse_chars","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Reverse the codepoints in this string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":138918,"byte_end":138927,"line_start":2688,"line_end":2688,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":140504,"byte_end":140521,"line_start":2747,"line_end":2747,"column_start":8,"column_end":25},"name":"reverse_graphemes","qualname":"::ext_slice::ByteSlice::reverse_graphemes","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Reverse the graphemes in this string, in place.","sig":null,"attributes":[{"value":"cfg(feature = \"unicode\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":140455,"byte_end":140482,"line_start":2745,"line_end":2745,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":140487,"byte_end":140496,"line_start":2746,"line_end":2746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":141450,"byte_end":141458,"line_start":2782,"line_end":2782,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::ext_slice::ByteSlice::is_ascii","value":"fn (&self) -> bool","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns true if and only if every byte in this byte string is ASCII.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":141433,"byte_end":141442,"line_start":2781,"line_end":2781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":142335,"byte_end":142342,"line_start":2810,"line_end":2810,"column_start":8,"column_end":15},"name":"is_utf8","qualname":"::ext_slice::ByteSlice::is_utf8","value":"fn (&self) -> bool","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns true if and only if the entire byte string is valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":142318,"byte_end":142327,"line_start":2809,"line_end":2809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":142932,"byte_end":142941,"line_start":2831,"line_end":2831,"column_start":8,"column_end":17},"name":"last_byte","qualname":"::ext_slice::ByteSlice::last_byte","value":"fn (&self) -> Option<u8>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the last byte in this byte string, if it's non-empty. If this\n byte string is empty, this returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":142915,"byte_end":142924,"line_start":2830,"line_end":2830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":143622,"byte_end":143641,"line_start":2852,"line_end":2852,"column_start":8,"column_end":27},"name":"find_non_ascii_byte","qualname":"::ext_slice::ByteSlice::find_non_ascii_byte","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Returns the index of the first non-ASCII byte in this byte string (if\n any such indices exist). Specifically, it returns the index of the\n first byte with a value greater than or equal to `0x80`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":143605,"byte_end":143614,"line_start":2851,"line_end":2851,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":144781,"byte_end":144796,"line_start":2887,"line_end":2887,"column_start":8,"column_end":23},"name":"copy_within_str","qualname":"::ext_slice::ByteSlice::copy_within_str","value":"fn <R> (&mut self, src: R, dest: usize) -> ()","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Copies elements from one part of the slice to another part of itself,\n where the parts may be overlapping.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":144764,"byte_end":144773,"line_start":2886,"line_end":2886,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147271,"byte_end":147277,"line_start":2945,"line_end":2945,"column_start":12,"column_end":18},"name":"Finder","qualname":"::ext_slice::Finder","value":"Finder {  }","parent":null,"children":[{"krate":0,"index":1039}],"decl_id":null,"docs":" A single substring searcher fixed to a particular needle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147410,"byte_end":147413,"line_start":2952,"line_end":2952,"column_start":12,"column_end":15},"name":"new","qualname":"<Finder>::new","value":"fn <B> (needle: &'a B) -> Finder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new finder for the given needle.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147389,"byte_end":147398,"line_start":2951,"line_end":2951,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147886,"byte_end":147896,"line_start":2965,"line_end":2965,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Finder>::into_owned","value":"fn (self) -> Finder<'static>","parent":null,"children":[],"decl_id":null,"docs":" Convert this finder into its owned variant, such that it no longer\n borrows the needle.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147837,"byte_end":147860,"line_start":2963,"line_end":2963,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147865,"byte_end":147874,"line_start":2964,"line_end":2964,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":148380,"byte_end":148386,"line_start":2976,"line_end":2976,"column_start":12,"column_end":18},"name":"needle","qualname":"<Finder>::needle","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the needle that this finder searches for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":148359,"byte_end":148368,"line_start":2975,"line_end":2975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":149416,"byte_end":149420,"line_start":3008,"line_end":3008,"column_start":12,"column_end":16},"name":"find","qualname":"<Finder>::find","value":"fn <B> (&self, haystack: B) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first occurrence of this needle in the given\n haystack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":149395,"byte_end":149404,"line_start":3007,"line_end":3007,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":150474,"byte_end":150487,"line_start":3030,"line_end":3030,"column_start":12,"column_end":25},"name":"FinderReverse","qualname":"::ext_slice::FinderReverse","value":"FinderReverse {  }","parent":null,"children":[{"krate":0,"index":1048}],"decl_id":null,"docs":" A single substring reverse searcher fixed to a particular needle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":150635,"byte_end":150638,"line_start":3037,"line_end":3037,"column_start":12,"column_end":15},"name":"new","qualname":"<FinderReverse>::new","value":"fn <B> (needle: &'a B) -> FinderReverse<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new reverse finder for the given needle.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":150614,"byte_end":150623,"line_start":3036,"line_end":3036,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":151125,"byte_end":151135,"line_start":3050,"line_end":3050,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<FinderReverse>::into_owned","value":"fn (self) -> FinderReverse<'static>","parent":null,"children":[],"decl_id":null,"docs":" Convert this finder into its owned variant, such that it no longer\n borrows the needle.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":151076,"byte_end":151099,"line_start":3048,"line_end":3048,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":151104,"byte_end":151113,"line_start":3049,"line_end":3049,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":151634,"byte_end":151640,"line_start":3061,"line_end":3061,"column_start":12,"column_end":18},"name":"needle","qualname":"<FinderReverse>::needle","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the needle that this finder searches for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":151613,"byte_end":151622,"line_start":3060,"line_end":3060,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":152700,"byte_end":152705,"line_start":3093,"line_end":3093,"column_start":12,"column_end":17},"name":"rfind","qualname":"<FinderReverse>::rfind","value":"fn <B> (&self, haystack: B) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the last occurrence of this needle in the given\n haystack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":152679,"byte_end":152688,"line_start":3092,"line_end":3092,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":153088,"byte_end":153092,"line_start":3105,"line_end":3105,"column_start":12,"column_end":16},"name":"Find","qualname":"::ext_slice::Find","value":"Find {  }","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"decl_id":null,"docs":" An iterator over non-overlapping substring matches.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":154286,"byte_end":154297,"line_start":3149,"line_end":3149,"column_start":12,"column_end":23},"name":"FindReverse","qualname":"::ext_slice::FindReverse","value":"FindReverse {  }","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" An iterator over non-overlapping substring matches in reverse.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":155761,"byte_end":155766,"line_start":3205,"line_end":3205,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::ext_slice::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":1075}],"decl_id":null,"docs":" An iterator over the bytes in a byte string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156521,"byte_end":156527,"line_start":3239,"line_end":3239,"column_start":12,"column_end":18},"name":"Fields","qualname":"::ext_slice::Fields","value":"Fields {  }","parent":null,"children":[{"krate":0,"index":1084}],"decl_id":null,"docs":" An iterator over the fields in a byte string, separated by whitespace.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":157329,"byte_end":157339,"line_start":3268,"line_end":3268,"column_start":12,"column_end":22},"name":"FieldsWith","qualname":"::ext_slice::FieldsWith","value":"FieldsWith {  }","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"decl_id":null,"docs":" An iterator over fields in the byte string, separated by a predicate over\n codepoints.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":158476,"byte_end":158481,"line_start":3312,"line_end":3312,"column_start":12,"column_end":17},"name":"Split","qualname":"::ext_slice::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102}],"decl_id":null,"docs":" An iterator over substrings in a byte string, split by a separator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":160304,"byte_end":160316,"line_start":3368,"line_end":3368,"column_start":12,"column_end":24},"name":"SplitReverse","qualname":"::ext_slice::SplitReverse","value":"SplitReverse {  }","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"decl_id":null,"docs":" An iterator over substrings in a byte string, split by a separator, in\n reverse.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":162188,"byte_end":162194,"line_start":3425,"line_end":3425,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::ext_slice::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"decl_id":null,"docs":" An iterator over at most `n` substrings in a byte string, split by a\n separator.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":163135,"byte_end":163148,"line_start":3464,"line_end":3464,"column_start":12,"column_end":25},"name":"SplitNReverse","qualname":"::ext_slice::SplitNReverse","value":"SplitNReverse {  }","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126}],"decl_id":null,"docs":" An iterator over at most `n` substrings in a byte string, split by a\n separator, in reverse.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":164110,"byte_end":164115,"line_start":3503,"line_end":3503,"column_start":12,"column_end":17},"name":"Lines","qualname":"::ext_slice::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":400}],"decl_id":null,"docs":" An iterator over all lines in a byte string, without their terminators.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":165288,"byte_end":165307,"line_start":3542,"line_end":3542,"column_start":12,"column_end":31},"name":"LinesWithTerminator","qualname":"::ext_slice::LinesWithTerminator","value":"LinesWithTerminator {  }","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" An iterator over all lines in a byte string, including their terminators.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":168229,"byte_end":168235,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"concat","qualname":"::ext_vec::concat","value":"fn <T, I> (elements: I) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Concatenate the elements given by the iterator together into a single\n `Vec<u8>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":168212,"byte_end":168221,"line_start":33,"line_end":33,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":168912,"byte_end":168916,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"join","qualname":"::ext_vec::join","value":"fn <B, T, I> (separator: B, elements: I) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Join the elements given by the iterator with the given separator into a\n single `Vec<u8>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":168895,"byte_end":168904,"line_start":63,"line_end":63,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169665,"byte_end":169671,"line_start":99,"line_end":99,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::ext_vec::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Ensure that callers cannot implement `ByteSlice` by making an\n umplementable trait its super trait.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169785,"byte_end":169792,"line_start":103,"line_end":103,"column_start":11,"column_end":18},"name":"ByteVec","qualname":"::ext_vec::ByteVec","value":"ByteVec: Sealed","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":489}],"decl_id":null,"docs":" A trait that extends a slice of bytes with string oriented methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":170025,"byte_end":170031,"line_start":108,"line_end":108,"column_start":8,"column_end":14},"name":"as_vec","qualname":"::ext_vec::ByteVec::as_vec","value":"fn (&self) -> &Vec<u8>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" A method for accessing the raw vector bytes of this type. This is\n always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":170284,"byte_end":170294,"line_start":114,"line_end":114,"column_start":8,"column_end":18},"name":"as_vec_mut","qualname":"::ext_vec::ByteVec::as_vec_mut","value":"fn (&mut self) -> &mut Vec<u8>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" A method for accessing the raw vector bytes of this type, mutably. This\n is always a no-op and callers shouldn't care about it. This only exists\n for making the extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":170537,"byte_end":170545,"line_start":120,"line_end":120,"column_start":8,"column_end":16},"name":"into_vec","qualname":"::ext_vec::ByteVec::into_vec","value":"fn (self) -> Vec<u8>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" A method for consuming ownership of this vector. This is always a no-op\n and callers shouldn't care about it. This only exists for making the\n extension trait work.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":170876,"byte_end":170886,"line_start":136,"line_end":136,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::ext_vec::ByteVec::from_slice","value":"fn <B> (bytes: B) -> Vec<u8>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Create a new owned byte string from the given byte slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":171513,"byte_end":171527,"line_start":159,"line_end":159,"column_start":8,"column_end":22},"name":"from_os_string","qualname":"::ext_vec::ByteVec::from_os_string","value":"fn (os_str: OsString) -> Result<Vec<u8>, OsString>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Create a new byte string from an owned OS string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":171496,"byte_end":171505,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":172674,"byte_end":172691,"line_start":198,"line_end":198,"column_start":8,"column_end":25},"name":"from_os_str_lossy","qualname":"::ext_vec::ByteVec::from_os_str_lossy","value":"fn <'a> (os_str: &'a OsStr) -> Cow<'a, [u8]>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Lossily create a new byte string from an OS string slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":172657,"byte_end":172666,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":173800,"byte_end":173813,"line_start":238,"line_end":238,"column_start":8,"column_end":21},"name":"from_path_buf","qualname":"::ext_vec::ByteVec::from_path_buf","value":"fn (path: PathBuf) -> Result<Vec<u8>, PathBuf>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Create a new byte string from an owned file path.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":173783,"byte_end":173792,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":174609,"byte_end":174624,"line_start":263,"line_end":263,"column_start":8,"column_end":23},"name":"from_path_lossy","qualname":"::ext_vec::ByteVec::from_path_lossy","value":"fn <'a> (path: &'a Path) -> Cow<'a, [u8]>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Lossily create a new byte string from a file path.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":174592,"byte_end":174601,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":175318,"byte_end":175327,"line_start":287,"line_end":287,"column_start":8,"column_end":17},"name":"push_byte","qualname":"::ext_vec::ByteVec::push_byte","value":"fn (&mut self, byte: u8) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Appends the given byte to the end of this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":175301,"byte_end":175310,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":175771,"byte_end":175780,"line_start":307,"line_end":307,"column_start":8,"column_end":17},"name":"push_char","qualname":"::ext_vec::ByteVec::push_char","value":"fn (&mut self, ch: char) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Appends the given `char` to the end of this byte string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":175754,"byte_end":175763,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":176489,"byte_end":176497,"line_start":332,"line_end":332,"column_start":8,"column_end":16},"name":"push_str","qualname":"::ext_vec::ByteVec::push_str","value":"fn <B> (&mut self, bytes: B) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Appends the given slice to the end of this byte string. This accepts\n any type that be converted to a `&[u8]`. This includes, but is not\n limited to, `&str`, `&BStr`, and of course, `&[u8]` itself.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":176472,"byte_end":176481,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":178013,"byte_end":178024,"line_start":377,"line_end":377,"column_start":8,"column_end":19},"name":"into_string","qualname":"::ext_vec::ByteVec::into_string","value":"fn (self) -> Result<String, FromUtf8Error>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Converts a `Vec<u8>` into a `String` if and only if this byte string is\n valid UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":177996,"byte_end":178005,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":178970,"byte_end":178987,"line_start":409,"line_end":409,"column_start":8,"column_end":25},"name":"into_string_lossy","qualname":"::ext_vec::ByteVec::into_string_lossy","value":"fn (self) -> String","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Lossily converts a `Vec<u8>` into a `String`. If this byte string\n contains invalid UTF-8, then the invalid bytes are replaced with the\n Unicode replacement codepoint.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":178953,"byte_end":178962,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":180303,"byte_end":180324,"line_start":450,"line_end":450,"column_start":15,"column_end":36},"name":"into_string_unchecked","qualname":"::ext_vec::ByteVec::into_string_unchecked","value":"fn (self) -> String","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Unsafely convert this byte string into a `String`, without checking for\n valid UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":180995,"byte_end":181009,"line_start":476,"line_end":476,"column_start":8,"column_end":22},"name":"into_os_string","qualname":"::ext_vec::ByteVec::into_os_string","value":"fn (self) -> Result<OsString, Vec<u8>>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Converts this byte string into an OS string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":180978,"byte_end":180987,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":182377,"byte_end":182397,"line_start":522,"line_end":522,"column_start":8,"column_end":28},"name":"into_os_string_lossy","qualname":"::ext_vec::ByteVec::into_os_string_lossy","value":"fn (self) -> OsString","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Lossily converts this byte string into an OS string, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":182360,"byte_end":182369,"line_start":521,"line_end":521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":183331,"byte_end":183344,"line_start":560,"line_end":560,"column_start":8,"column_end":21},"name":"into_path_buf","qualname":"::ext_vec::ByteVec::into_path_buf","value":"fn (self) -> Result<PathBuf, Vec<u8>>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Converts this byte string into an owned file path, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":183314,"byte_end":183323,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":184276,"byte_end":184295,"line_start":589,"line_end":589,"column_start":8,"column_end":27},"name":"into_path_buf_lossy","qualname":"::ext_vec::ByteVec::into_path_buf_lossy","value":"fn (self) -> PathBuf","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Lossily converts this byte string into an owned file path, in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":184259,"byte_end":184268,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":185267,"byte_end":185275,"line_start":621,"line_end":621,"column_start":8,"column_end":16},"name":"pop_byte","qualname":"::ext_vec::ByteVec::pop_byte","value":"fn (&mut self) -> Option<u8>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Removes the last byte from this `Vec<u8>` and returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":185250,"byte_end":185259,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":186982,"byte_end":186990,"line_start":667,"line_end":667,"column_start":8,"column_end":16},"name":"pop_char","qualname":"::ext_vec::ByteVec::pop_char","value":"fn (&mut self) -> Option<char>","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Removes the last codepoint from this `Vec<u8>` and returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":186965,"byte_end":186974,"line_start":666,"line_end":666,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":188242,"byte_end":188253,"line_start":711,"line_end":711,"column_start":8,"column_end":19},"name":"remove_char","qualname":"::ext_vec::ByteVec::remove_char","value":"fn (&mut self, at: usize) -> char","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Removes a `char` from this `Vec<u8>` at the given byte position and\n returns it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":188225,"byte_end":188234,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":189157,"byte_end":189168,"line_start":745,"line_end":745,"column_start":8,"column_end":19},"name":"insert_char","qualname":"::ext_vec::ByteVec::insert_char","value":"fn (&mut self, at: usize, ch: char) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Inserts the given codepoint into this `Vec<u8>` at a particular byte\n position.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":189140,"byte_end":189149,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":190061,"byte_end":190071,"line_start":775,"line_end":775,"column_start":8,"column_end":18},"name":"insert_str","qualname":"::ext_vec::ByteVec::insert_str","value":"fn <B> (&mut self, at: usize, bytes: B) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Inserts the given byte string into this byte string at a particular\n byte position.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":190044,"byte_end":190053,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":192064,"byte_end":192077,"line_start":827,"line_end":827,"column_start":8,"column_end":21},"name":"replace_range","qualname":"::ext_vec::ByteVec::replace_range","value":"fn <R, B> (&mut self, range: R, replace_with: B) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Removes the specified range in this byte string and replaces it with\n the given bytes. The given bytes do not need to have the same length\n as the range provided.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":192047,"byte_end":192056,"line_start":826,"line_end":826,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":193242,"byte_end":193253,"line_start":865,"line_end":865,"column_start":8,"column_end":19},"name":"drain_bytes","qualname":"::ext_vec::ByteVec::drain_bytes","value":"fn <R> (&mut self, range: R) -> DrainBytes","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in this\n `Vec<u8>` and yields each of the removed bytes.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":193225,"byte_end":193234,"line_start":864,"line_end":864,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":193956,"byte_end":193966,"line_start":895,"line_end":895,"column_start":12,"column_end":22},"name":"DrainBytes","qualname":"::ext_vec::DrainBytes","value":"DrainBytes {  }","parent":null,"children":[{"krate":0,"index":1132}],"decl_id":null,"docs":" A draining byte oriented iterator for `Vec<u8>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":195211,"byte_end":195224,"line_start":948,"line_end":948,"column_start":12,"column_end":25},"name":"FromUtf8Error","qualname":"::ext_vec::FromUtf8Error","value":"FromUtf8Error {  }","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138}],"decl_id":null,"docs":" An error that may occur when converting a `Vec<u8>` to a `String`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":195200,"byte_end":195271,"line_start":948,"line_end":951,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":195771,"byte_end":195779,"line_start":971,"line_end":971,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<FromUtf8Error>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the original bytes as a slice that failed to convert to a\n `String`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":195750,"byte_end":195759,"line_start":970,"line_end":970,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":196356,"byte_end":196364,"line_start":993,"line_end":993,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<FromUtf8Error>::into_vec","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume this error and return the original byte string that failed to\n convert to a `String`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":196335,"byte_end":196344,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":196947,"byte_end":196957,"line_start":1014,"line_end":1014,"column_start":12,"column_end":22},"name":"utf8_error","qualname":"<FromUtf8Error>::utf8_error","value":"fn (&self) -> &Utf8Error","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying UTF-8 error that occurred. This error provides\n information on the nature and location of the invalid UTF-8 detected.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":196926,"byte_end":196935,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":753},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":755},{"krate":0,"index":759}],"decl_id":null,"docs":"Utilities for working with I/O using byte strings.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19332,"byte_end":19355,"line_start":419,"line_end":419,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":218664,"byte_end":218674,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"BufReadExt","qualname":"::io::BufReadExt","value":"BufReadExt: io::BufRead","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":751}],"decl_id":null,"docs":" An extention trait for\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html)\n which provides convenience APIs for dealing with byte strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":219781,"byte_end":219791,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"byte_lines","qualname":"::io::BufReadExt::byte_lines","value":"fn (self) -> ByteLines<Self>","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":" Returns an iterator over the lines of this reader, where each line\n is represented as a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":221244,"byte_end":221257,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"for_byte_line","qualname":"::io::BufReadExt::for_byte_line","value":"fn <F> (mut self, mut for_each_line: F) -> io::Result<()>","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":" Executes the given closure on each line in the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":222983,"byte_end":223012,"line_start":148,"line_end":148,"column_start":8,"column_end":37},"name":"for_byte_line_with_terminator","qualname":"::io::BufReadExt::for_byte_line_with_terminator","value":"fn <F> (mut self, mut for_each_line: F) -> io::Result<()>","parent":{"krate":0,"index":747},"children":[],"decl_id":null,"docs":" Executes the given closure on each line in the underlying reader.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":223783,"byte_end":223792,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"ByteLines","qualname":"::io::ByteLines","value":"ByteLines {  }","parent":null,"children":[{"krate":0,"index":1428}],"decl_id":null,"docs":" An iterator over lines from an instance of\n [`std::io::BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":288856,"byte_end":288865,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"Graphemes","qualname":"::unicode::grapheme::Graphemes","value":"Graphemes {  }","parent":null,"children":[{"krate":0,"index":1638}],"decl_id":null,"docs":" An iterator over grapheme clusters in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":289577,"byte_end":289585,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Graphemes>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":289556,"byte_end":289565,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":291968,"byte_end":291983,"line_start":120,"line_end":120,"column_start":12,"column_end":27},"name":"GraphemeIndices","qualname":"::unicode::grapheme::GraphemeIndices","value":"GraphemeIndices {  }","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649}],"decl_id":null,"docs":" An iterator over grapheme clusters in a byte string and their byte index\n positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":292819,"byte_end":292827,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<GraphemeIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":292798,"byte_end":292807,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":300671,"byte_end":300680,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Sentences","qualname":"::unicode::sentence::Sentences","value":"Sentences {  }","parent":null,"children":[{"krate":0,"index":1658}],"decl_id":null,"docs":" An iterator over sentences in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":301475,"byte_end":301483,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Sentences>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":301454,"byte_end":301463,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":303117,"byte_end":303132,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"SentenceIndices","qualname":"::unicode::sentence::SentenceIndices","value":"SentenceIndices {  }","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668}],"decl_id":null,"docs":" An iterator over sentences in a byte string, along with their byte offsets.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":304000,"byte_end":304008,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SentenceIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":303979,"byte_end":303988,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":308624,"byte_end":308629,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Words","qualname":"::unicode::word::Words","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over words in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":309362,"byte_end":309370,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Words>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":309341,"byte_end":309350,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1685},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":311419,"byte_end":311430,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"WordIndices","qualname":"::unicode::word::WordIndices","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over words in a byte string and their byte index positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":312219,"byte_end":312227,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<WordIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":312198,"byte_end":312207,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":313678,"byte_end":313693,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"WordsWithBreaks","qualname":"::unicode::word::WordsWithBreaks","value":"WordsWithBreaks {  }","parent":null,"children":[{"krate":0,"index":1697}],"decl_id":null,"docs":" An iterator over all word breaks in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":314535,"byte_end":314543,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<WordsWithBreaks>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":314514,"byte_end":314523,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":316499,"byte_end":316520,"line_start":250,"line_end":250,"column_start":12,"column_end":33},"name":"WordsWithBreakIndices","qualname":"::unicode::word::WordsWithBreakIndices","value":"WordsWithBreakIndices {  }","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"decl_id":null,"docs":" An iterator over all word breaks in a byte string, along with their byte\n index positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":317435,"byte_end":317443,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<WordsWithBreakIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":317414,"byte_end":317423,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":324353,"byte_end":324358,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"Chars","qualname":"::utf8::Chars","value":"Chars {  }","parent":null,"children":[{"krate":0,"index":1716}],"decl_id":null,"docs":" An iterator over Unicode scalar values in a byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":325075,"byte_end":325083,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Chars>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":325054,"byte_end":325063,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":326776,"byte_end":326787,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"CharIndices","qualname":"::utf8::CharIndices","value":"CharIndices {  }","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727}],"decl_id":null,"docs":" An iterator over Unicode scalar values in a byte string and their\n byte index positions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":327607,"byte_end":327615,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CharIndices>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":327586,"byte_end":327595,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":330238,"byte_end":330247,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"Utf8Error","qualname":"::utf8::Utf8Error","value":"Utf8Error {  }","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736}],"decl_id":null,"docs":" An error that occurs when UTF-8 decoding fails.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":330227,"byte_end":330305,"line_start":270,"line_end":273,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":330937,"byte_end":330948,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"valid_up_to","qualname":"<Utf8Error>::valid_up_to","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte index of the position immediately following the last\n valid UTF-8 byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":330916,"byte_end":330925,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":331554,"byte_end":331563,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"error_len","qualname":"<Utf8Error>::error_len","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of invalid UTF-8 bytes immediately following\n the position returned by `valid_up_to`. This value is always at least\n `1`, but can be up to `3` if bytes form a valid prefix of some UTF-8\n encoded codepoint.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":331533,"byte_end":331542,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":337503,"byte_end":337509,"line_start":473,"line_end":473,"column_start":8,"column_end":14},"name":"decode","qualname":"::utf8::decode","value":"fn <B> (slice: B) -> (Option<char>, usize)","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 decode a single Unicode scalar value from the beginning of a slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":337486,"byte_end":337495,"line_start":472,"line_end":472,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":341736,"byte_end":341747,"line_start":600,"line_end":600,"column_start":8,"column_end":19},"name":"decode_last","qualname":"::utf8::decode_last","value":"fn <B> (slice: B) -> (Option<char>, usize)","parent":null,"children":[],"decl_id":null,"docs":" UTF-8 decode a single Unicode scalar value from the end of a slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":341719,"byte_end":341728,"line_start":599,"line_end":599,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\bstr.rs","byte_start":33512,"byte_end":33516,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\bstring.rs","byte_start":35572,"byte_end":35579,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\cow.rs","byte_start":49527,"byte_end":49535,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\cow.rs","byte_start":49640,"byte_end":49648,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\cow.rs","byte_start":50647,"byte_end":50650,"line_start":61,"line_end":61,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147322,"byte_end":147328,"line_start":2949,"line_end":2949,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":150532,"byte_end":150545,"line_start":3034,"line_end":3034,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":153207,"byte_end":153211,"line_start":3112,"line_end":3112,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":153465,"byte_end":153469,"line_start":3120,"line_end":3120,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":154542,"byte_end":154553,"line_start":3158,"line_end":3158,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":154994,"byte_end":155005,"line_start":3175,"line_end":3175,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":155827,"byte_end":155832,"line_start":3209,"line_end":3209,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":155990,"byte_end":155995,"line_start":3218,"line_end":3218,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156140,"byte_end":156145,"line_start":3225,"line_end":3225,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156588,"byte_end":156594,"line_start":3243,"line_end":3243,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156742,"byte_end":156748,"line_start":3249,"line_end":3249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":157444,"byte_end":157454,"line_start":3274,"line_end":3274,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":157647,"byte_end":157657,"line_start":3280,"line_end":3280,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":158965,"byte_end":158970,"line_start":3324,"line_end":3324,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":159172,"byte_end":159177,"line_start":3331,"line_end":3331,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":160807,"byte_end":160819,"line_start":3380,"line_end":3380,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":161049,"byte_end":161061,"line_start":3387,"line_end":3387,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":162271,"byte_end":162277,"line_start":3431,"line_end":3431,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":162519,"byte_end":162525,"line_start":3442,"line_end":3442,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":163232,"byte_end":163245,"line_start":3470,"line_end":3470,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":163502,"byte_end":163515,"line_start":3481,"line_end":3481,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":164167,"byte_end":164172,"line_start":3507,"line_end":3507,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":164307,"byte_end":164312,"line_start":3513,"line_end":3513,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":165347,"byte_end":165366,"line_start":3546,"line_end":3546,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":165499,"byte_end":165518,"line_start":3552,"line_end":3552,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169361,"byte_end":169364,"line_start":85,"line_end":85,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169691,"byte_end":169694,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194037,"byte_end":194047,"line_start":899,"line_end":899,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194078,"byte_end":194088,"line_start":901,"line_end":901,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194234,"byte_end":194244,"line_start":910,"line_end":910,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194377,"byte_end":194387,"line_start":917,"line_end":917,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":195278,"byte_end":195291,"line_start":953,"line_end":953,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":197030,"byte_end":197043,"line_start":1019,"line_end":1019,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":197158,"byte_end":197171,"line_start":1026,"line_end":1026,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":200803,"byte_end":200810,"line_start":74,"line_end":74,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":200984,"byte_end":200991,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201163,"byte_end":201170,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201329,"byte_end":201336,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201477,"byte_end":201484,"line_start":104,"line_end":104,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201607,"byte_end":201614,"line_start":111,"line_end":111,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201740,"byte_end":201747,"line_start":118,"line_end":118,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201882,"byte_end":201889,"line_start":125,"line_end":125,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202028,"byte_end":202035,"line_start":132,"line_end":132,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202157,"byte_end":202161,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202323,"byte_end":202330,"line_start":148,"line_end":148,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202450,"byte_end":202457,"line_start":154,"line_end":154,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202602,"byte_end":202609,"line_start":161,"line_end":161,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202748,"byte_end":202751,"line_start":168,"line_end":168,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202885,"byte_end":202892,"line_start":175,"line_end":175,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203046,"byte_end":203053,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203205,"byte_end":203212,"line_start":189,"line_end":189,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203367,"byte_end":203370,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203523,"byte_end":203530,"line_start":203,"line_end":203,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203735,"byte_end":203742,"line_start":210,"line_end":210,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203955,"byte_end":203962,"line_start":217,"line_end":217,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":204256,"byte_end":204263,"line_start":228,"line_end":228,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":204558,"byte_end":204565,"line_start":239,"line_end":239,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":204855,"byte_end":204862,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205132,"byte_end":205139,"line_start":261,"line_end":261,"column_start":17,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205167,"byte_end":205174,"line_start":263,"line_end":263,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205632,"byte_end":205639,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205826,"byte_end":205833,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":206502,"byte_end":206506,"line_start":314,"line_end":314,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":206856,"byte_end":206860,"line_start":327,"line_end":327,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207394,"byte_end":207398,"line_start":345,"line_end":345,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207551,"byte_end":207555,"line_start":354,"line_end":354,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207699,"byte_end":207703,"line_start":361,"line_end":361,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207887,"byte_end":207891,"line_start":370,"line_end":370,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208072,"byte_end":208076,"line_start":379,"line_end":379,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208308,"byte_end":208312,"line_start":388,"line_end":388,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208555,"byte_end":208559,"line_start":397,"line_end":397,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208783,"byte_end":208787,"line_start":406,"line_end":406,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209016,"byte_end":209020,"line_start":415,"line_end":415,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209239,"byte_end":209243,"line_start":424,"line_end":424,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209414,"byte_end":209418,"line_start":431,"line_end":431,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209585,"byte_end":209589,"line_start":438,"line_end":438,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209817,"byte_end":209821,"line_start":445,"line_end":445,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210060,"byte_end":210064,"line_start":452,"line_end":452,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210284,"byte_end":210288,"line_start":459,"line_end":459,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210513,"byte_end":210517,"line_start":466,"line_end":466,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210720,"byte_end":210724,"line_start":473,"line_end":473,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":211112,"byte_end":211116,"line_start":494,"line_end":494,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212004,"byte_end":212007,"line_start":535,"line_end":535,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212148,"byte_end":212152,"line_start":542,"line_end":542,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212186,"byte_end":212190,"line_start":544,"line_end":544,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212991,"byte_end":212995,"line_start":571,"line_end":571,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":213187,"byte_end":213191,"line_start":578,"line_end":578,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":213973,"byte_end":213977,"line_start":611,"line_end":611,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":214470,"byte_end":214481,"line_start":629,"line_end":629,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":215519,"byte_end":215526,"line_start":670,"line_end":670,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":215779,"byte_end":215786,"line_start":680,"line_end":680,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":216012,"byte_end":216026,"line_start":688,"line_end":688,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":223434,"byte_end":223435,"line_start":167,"line_end":167,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":223847,"byte_end":223856,"line_start":182,"line_end":182,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\prefilter.rs","byte_start":230135,"byte_end":230149,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\prefilter.rs","byte_start":233269,"byte_end":233274,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":247068,"byte_end":247074,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":262816,"byte_end":262821,"line_start":491,"line_end":491,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":265389,"byte_end":265395,"line_start":557,"line_end":557,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":270538,"byte_end":270548,"line_start":685,"line_end":685,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":288902,"byte_end":288911,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":289654,"byte_end":289663,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":289970,"byte_end":289979,"line_start":78,"line_end":78,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":292072,"byte_end":292087,"line_start":126,"line_end":126,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":292896,"byte_end":292911,"line_start":156,"line_end":156,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":293349,"byte_end":293364,"line_start":172,"line_end":172,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":300717,"byte_end":300726,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":301552,"byte_end":301561,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":303195,"byte_end":303210,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":304077,"byte_end":304092,"line_start":128,"line_end":128,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":308666,"byte_end":308671,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":309449,"byte_end":309454,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":311473,"byte_end":311484,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":312306,"byte_end":312317,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":313730,"byte_end":313745,"line_start":175,"line_end":175,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":314612,"byte_end":314627,"line_start":208,"line_end":208,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":316583,"byte_end":316604,"line_start":255,"line_end":255,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":317512,"byte_end":317533,"line_start":288,"line_end":288,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":324395,"byte_end":324400,"line_start":81,"line_end":81,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":325152,"byte_end":325157,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":325443,"byte_end":325448,"line_start":125,"line_end":125,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":326876,"byte_end":326887,"line_start":162,"line_end":162,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":327684,"byte_end":327695,"line_start":192,"line_end":192,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":328112,"byte_end":328123,"line_start":208,"line_end":208,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":330312,"byte_end":330321,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":331668,"byte_end":331677,"line_start":315,"line_end":315,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":331771,"byte_end":331780,"line_start":321,"line_end":321,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\lib.rs","byte_start":19364,"byte_end":19366,"line_start":420,"line_end":420,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":743}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\bstr.rs","byte_start":33512,"byte_end":33516,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\bstring.rs","byte_start":35572,"byte_end":35579,"line_start":44,"line_end":44,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\cow.rs","byte_start":49527,"byte_end":49535,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":1550}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\cow.rs","byte_start":49640,"byte_end":49648,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\cow.rs","byte_start":50647,"byte_end":50650,"line_start":61,"line_end":61,"column_start":10,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":53883,"byte_end":53889,"line_start":95,"line_end":95,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":188}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":147322,"byte_end":147328,"line_start":2949,"line_end":2949,"column_start":10,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":150532,"byte_end":150545,"line_start":3034,"line_end":3034,"column_start":10,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":153207,"byte_end":153211,"line_start":3112,"line_end":3112,"column_start":10,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":153465,"byte_end":153469,"line_start":3120,"line_end":3120,"column_start":23,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":154542,"byte_end":154553,"line_start":3158,"line_end":3158,"column_start":10,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":154994,"byte_end":155005,"line_start":3175,"line_end":3175,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1064},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":155827,"byte_end":155832,"line_start":3209,"line_end":3209,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":155990,"byte_end":155995,"line_start":3218,"line_end":3218,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156140,"byte_end":156145,"line_start":3225,"line_end":3225,"column_start":32,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1073},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156588,"byte_end":156594,"line_start":3243,"line_end":3243,"column_start":10,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":156742,"byte_end":156748,"line_start":3249,"line_end":3249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1082},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":157444,"byte_end":157454,"line_start":3274,"line_end":3274,"column_start":34,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":157647,"byte_end":157657,"line_start":3280,"line_end":3280,"column_start":47,"column_end":57},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1088},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":158965,"byte_end":158970,"line_start":3324,"line_end":3324,"column_start":10,"column_end":15},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":159172,"byte_end":159177,"line_start":3331,"line_end":3331,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1098},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":160807,"byte_end":160819,"line_start":3380,"line_end":3380,"column_start":10,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":161049,"byte_end":161061,"line_start":3387,"line_end":3387,"column_start":23,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":162271,"byte_end":162277,"line_start":3431,"line_end":3431,"column_start":10,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":162519,"byte_end":162525,"line_start":3442,"line_end":3442,"column_start":23,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":163232,"byte_end":163245,"line_start":3470,"line_end":3470,"column_start":10,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":163502,"byte_end":163515,"line_start":3481,"line_end":3481,"column_start":23,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":164167,"byte_end":164172,"line_start":3507,"line_end":3507,"column_start":10,"column_end":15},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":164307,"byte_end":164312,"line_start":3513,"line_end":3513,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":398},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":165347,"byte_end":165366,"line_start":3546,"line_end":3546,"column_start":10,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_slice.rs","byte_start":165499,"byte_end":165518,"line_start":3552,"line_end":3552,"column_start":23,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169361,"byte_end":169364,"line_start":85,"line_end":85,"column_start":18,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":3563},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169691,"byte_end":169694,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":3563},"to":{"krate":0,"index":448}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":169794,"byte_end":169800,"line_start":103,"line_end":103,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":448},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194037,"byte_end":194047,"line_start":899,"line_end":899,"column_start":34,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":3401}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194078,"byte_end":194088,"line_start":901,"line_end":901,"column_start":23,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194234,"byte_end":194244,"line_start":910,"line_end":910,"column_start":34,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":194377,"byte_end":194387,"line_start":917,"line_end":917,"column_start":32,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":3321}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":195278,"byte_end":195291,"line_start":953,"line_end":953,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":197030,"byte_end":197043,"line_start":1019,"line_end":1019,"column_start":23,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1136},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\ext_vec.rs","byte_start":197158,"byte_end":197171,"line_start":1026,"line_end":1026,"column_start":23,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":200803,"byte_end":200810,"line_start":74,"line_end":74,"column_start":27,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":200984,"byte_end":200991,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201163,"byte_end":201170,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":1550}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201329,"byte_end":201336,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201477,"byte_end":201484,"line_start":104,"line_end":104,"column_start":26,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201607,"byte_end":201614,"line_start":111,"line_end":111,"column_start":26,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201740,"byte_end":201747,"line_start":118,"line_end":118,"column_start":26,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":201882,"byte_end":201889,"line_start":125,"line_end":125,"column_start":26,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202028,"byte_end":202035,"line_start":132,"line_end":132,"column_start":27,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2106}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202157,"byte_end":202161,"line_start":139,"line_end":139,"column_start":22,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1005},"to":{"krate":5,"index":2907}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202323,"byte_end":202330,"line_start":148,"line_end":148,"column_start":22,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202450,"byte_end":202457,"line_start":154,"line_end":154,"column_start":33,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202602,"byte_end":202609,"line_start":161,"line_end":161,"column_start":28,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202748,"byte_end":202751,"line_start":168,"line_end":168,"column_start":28,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":5,"index":3563},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":202885,"byte_end":202892,"line_start":175,"line_end":175,"column_start":32,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203046,"byte_end":203053,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203205,"byte_end":203212,"line_start":189,"line_end":189,"column_start":33,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203367,"byte_end":203370,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":2916},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203523,"byte_end":203530,"line_start":203,"line_end":203,"column_start":33,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":3329}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203735,"byte_end":203742,"line_start":210,"line_end":210,"column_start":31,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":3329}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":203955,"byte_end":203962,"line_start":217,"line_end":217,"column_start":40,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":3329}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":204256,"byte_end":204263,"line_start":228,"line_end":228,"column_start":41,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":3329}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":204558,"byte_end":204565,"line_start":239,"line_end":239,"column_start":41,"column_end":48},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":3329}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":204855,"byte_end":204862,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":3329}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205132,"byte_end":205139,"line_start":261,"line_end":261,"column_start":17,"column_end":24},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205167,"byte_end":205174,"line_start":263,"line_end":263,"column_start":24,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205632,"byte_end":205639,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":205826,"byte_end":205833,"line_start":286,"line_end":286,"column_start":18,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1010},"to":{"krate":2,"index":1906}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":206502,"byte_end":206506,"line_start":314,"line_end":314,"column_start":27,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":206856,"byte_end":206860,"line_start":327,"line_end":327,"column_start":25,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207394,"byte_end":207398,"line_start":345,"line_end":345,"column_start":25,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1550}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207551,"byte_end":207555,"line_start":354,"line_end":354,"column_start":28,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1561}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207699,"byte_end":207703,"line_start":361,"line_end":361,"column_start":32,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":207887,"byte_end":207891,"line_start":370,"line_end":370,"column_start":41,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208072,"byte_end":208076,"line_start":379,"line_end":379,"column_start":44,"column_end":48},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208308,"byte_end":208312,"line_start":388,"line_end":388,"column_start":53,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208555,"byte_end":208559,"line_start":397,"line_end":397,"column_start":48,"column_end":52},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":208783,"byte_end":208787,"line_start":406,"line_end":406,"column_start":46,"column_end":50},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209016,"byte_end":209020,"line_start":415,"line_end":415,"column_start":55,"column_end":59},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1626}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209239,"byte_end":209243,"line_start":424,"line_end":424,"column_start":35,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209414,"byte_end":209418,"line_start":431,"line_end":431,"column_start":44,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209585,"byte_end":209589,"line_start":438,"line_end":438,"column_start":47,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":209817,"byte_end":209821,"line_start":445,"line_end":445,"column_start":56,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210060,"byte_end":210064,"line_start":452,"line_end":452,"column_start":51,"column_end":55},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210284,"byte_end":210288,"line_start":459,"line_end":459,"column_start":49,"column_end":53},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210513,"byte_end":210517,"line_start":466,"line_end":466,"column_start":58,"column_end":62},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1630}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":210720,"byte_end":210724,"line_start":473,"line_end":473,"column_start":26,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":211112,"byte_end":211116,"line_start":494,"line_end":494,"column_start":26,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2036}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212004,"byte_end":212007,"line_start":535,"line_end":535,"column_start":33,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":2916},"to":{"krate":2,"index":2042}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212148,"byte_end":212152,"line_start":542,"line_end":542,"column_start":17,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212186,"byte_end":212190,"line_start":544,"line_end":544,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":212991,"byte_end":212995,"line_start":571,"line_end":571,"column_start":25,"column_end":29},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":213187,"byte_end":213191,"line_start":578,"line_end":578,"column_start":18,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":1906}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":213973,"byte_end":213977,"line_start":611,"line_end":611,"column_start":24,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1005},"to":{"krate":17,"index":1638}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":214470,"byte_end":214481,"line_start":629,"line_end":629,"column_start":40,"column_end":51},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":698},"to":{"krate":17,"index":1278}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":215519,"byte_end":215526,"line_start":670,"line_end":670,"column_start":24,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1010},"to":{"krate":17,"index":1638}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":215779,"byte_end":215786,"line_start":680,"line_end":680,"column_start":36,"column_end":43},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1010},"to":{"krate":17,"index":1194}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\impls.rs","byte_start":216012,"byte_end":216026,"line_start":688,"line_end":688,"column_start":40,"column_end":54},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":727},"to":{"krate":17,"index":1278}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":218680,"byte_end":218687,"line_start":18,"line_end":18,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2823},"to":{"krate":0,"index":747}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":223434,"byte_end":223435,"line_start":167,"line_end":167,"column_start":37,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":754},"to":{"krate":0,"index":747}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\io.rs","byte_start":223847,"byte_end":223856,"line_start":182,"line_end":182,"column_start":35,"column_end":44},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1426},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\prefilter.rs","byte_start":230135,"byte_end":230149,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\prefilter.rs","byte_start":233269,"byte_end":233274,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":247068,"byte_end":247074,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":262816,"byte_end":262821,"line_start":491,"line_end":491,"column_start":6,"column_end":11},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":265389,"byte_end":265395,"line_start":557,"line_end":557,"column_start":6,"column_end":12},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\search\\twoway.rs","byte_start":270538,"byte_end":270548,"line_start":685,"line_end":685,"column_start":6,"column_end":16},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":288902,"byte_end":288911,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":289654,"byte_end":289663,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1636},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":289970,"byte_end":289979,"line_start":78,"line_end":78,"column_start":34,"column_end":43},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1636},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":292072,"byte_end":292087,"line_start":126,"line_end":126,"column_start":10,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":292896,"byte_end":292911,"line_start":156,"line_end":156,"column_start":23,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1645},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\grapheme.rs","byte_start":293349,"byte_end":293364,"line_start":172,"line_end":172,"column_start":34,"column_end":49},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1645},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":300717,"byte_end":300726,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":301552,"byte_end":301561,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1656},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":303195,"byte_end":303210,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\sentence.rs","byte_start":304077,"byte_end":304092,"line_start":128,"line_end":128,"column_start":23,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1665},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":308666,"byte_end":308671,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":309449,"byte_end":309454,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1675},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":311473,"byte_end":311484,"line_start":106,"line_end":106,"column_start":10,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":312306,"byte_end":312317,"line_start":137,"line_end":137,"column_start":23,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1685},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":313730,"byte_end":313745,"line_start":175,"line_end":175,"column_start":10,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":314612,"byte_end":314627,"line_start":208,"line_end":208,"column_start":23,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1695},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":316583,"byte_end":316604,"line_start":255,"line_end":255,"column_start":10,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\unicode\\word.rs","byte_start":317512,"byte_end":317533,"line_start":288,"line_end":288,"column_start":23,"column_end":44},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":324395,"byte_end":324400,"line_start":81,"line_end":81,"column_start":10,"column_end":15},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":325152,"byte_end":325157,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1714},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":325443,"byte_end":325448,"line_start":125,"line_end":125,"column_start":34,"column_end":39},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1714},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":326876,"byte_end":326887,"line_start":162,"line_end":162,"column_start":10,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":327684,"byte_end":327695,"line_start":192,"line_end":192,"column_start":23,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1723},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":328112,"byte_end":328123,"line_start":208,"line_end":208,"column_start":34,"column_end":45},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1723},"to":{"krate":2,"index":3301}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":330312,"byte_end":330321,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":331668,"byte_end":331677,"line_start":315,"line_end":315,"column_start":23,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bstr-0.2.6\\src\\utf8.rs","byte_start":331771,"byte_end":331780,"line_start":321,"line_end":321,"column_start":23,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1734},"to":{"krate":2,"index":6709}}]}