{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1","program":"C:\\Users\\SamratKS\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","base64","C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=884ea73be87dcbc8","-C","extra-filename=-884ea73be87dcbc8","--out-dir","c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\test_sered\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\test_sered\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\test_sered\\target\\rls\\debug\\deps\\libbyteorder-2f9f53e4e1bd4873.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\SamratKS\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\SamratKS\\Desktop\\Others\\Rust\\test_sered\\target\\rls\\debug\\deps\\libbase64-884ea73be87dcbc8.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[14341998645227558651,9804006034505047769]},"crate_root":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src","external_crates":[{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","num":12,"id":{"name":"byteorder","disambiguator":[1668327077863490874,9058268309931896717]}}],"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":6452,"line_start":1,"line_end":180,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\mod.rs","byte_start":56332,"byte_end":56345,"line_start":3,"line_end":3,"column_start":24,"column_end":37},"alias_span":null,"name":"EncoderWriter","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3163,"byte_end":3169,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3171,"byte_end":3184,"line_start":73,"line_end":73,"column_start":26,"column_end":39},"alias_span":null,"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3186,"byte_end":3203,"line_start":73,"line_end":73,"column_start":41,"column_end":58},"alias_span":null,"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3205,"byte_end":3224,"line_start":73,"line_end":73,"column_start":60,"column_end":79},"alias_span":null,"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3257,"byte_end":3263,"line_start":76,"line_end":76,"column_start":18,"column_end":24},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3265,"byte_end":3278,"line_start":76,"line_end":76,"column_start":26,"column_end":39},"alias_span":null,"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3280,"byte_end":3297,"line_start":76,"line_end":76,"column_start":41,"column_end":58},"alias_span":null,"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3299,"byte_end":3318,"line_start":76,"line_end":76,"column_start":60,"column_end":79},"alias_span":null,"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3320,"byte_end":3331,"line_start":76,"line_end":76,"column_start":81,"column_end":92},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":0,"byte_end":6452,"line_start":1,"line_end":180,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":45},{"krate":0,"index":73},{"krate":0,"index":87},{"krate":0,"index":143},{"krate":0,"index":168},{"krate":0,"index":173},{"krate":0,"index":213},{"krate":0,"index":253},{"krate":0,"index":263},{"krate":0,"index":262},{"krate":0,"index":260},{"krate":0,"index":219},{"krate":0,"index":265},{"krate":0,"index":272},{"krate":0,"index":271},{"krate":0,"index":269},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"deny(missing_docs,\n       trivial_casts,\n       trivial_numeric_casts,\n       unused_extern_crates,\n       unused_import_braces,\n       unused_results,\n       variant_size_differences,\n       warnings,\n       unsafe_code)","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":2834,"byte_end":3041,"line_start":53,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":6619,"byte_end":6624,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":68}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14231,"byte_end":14244,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14411,"byte_end":14422,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"fn (bytes: &[u8], config: Config) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\mod.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":142}],"decl_id":null,"docs":" Implementations of `io::Write` to transparently handle base64.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":58381,"byte_end":58394,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::write::encoder::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" A `Write` implementation that base64 encodes data before delegating to the wrapped writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":59908,"byte_end":59911,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter>::new","value":"fn (w: &'a mut W, config: Config) -> EncoderWriter<'a, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that will write to the provided delegate writer `w`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":60821,"byte_end":60827,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter>::finish","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode all remaining buffered data and write it, including any trailing incomplete input\n triples and associated padding.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\encode.rs","byte_start":71342,"byte_end":71348,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"fn <T> (input: &T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\encode.rs","byte_start":71809,"byte_end":71822,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"fn <T> (input: &T, config: Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\encode.rs","byte_start":72739,"byte_end":72756,"line_start":68,"line_end":68,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"fn <T> (input: &T, config: Config, buf: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\encode.rs","byte_start":74046,"byte_end":74065,"line_start":111,"line_end":111,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":95038,"byte_end":95049,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":95110,"byte_end":95123,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":95466,"byte_end":95483,"line_start":32,"line_end":32,"column_start":5,"column_end":22},"name":"InvalidLastSymbol","qualname":"::decode::DecodeError::InvalidLastSymbol","value":"DecodeError::InvalidLastSymbol(usize, u8)","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\n This is indicative of corrupted or truncated Base64.\n Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for\n symbols that are in the alphabet but represent nonsensical encodings.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":94928,"byte_end":94939,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"DecodeError::{InvalidByte, InvalidLength, InvalidLastSymbol}","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":240}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":94919,"byte_end":95497,"line_start":23,"line_end":33,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":96736,"byte_end":96742,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"fn <T> (input: &T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":97296,"byte_end":97309,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"fn <T> (input: &T, config: Config) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":98153,"byte_end":98170,"line_start":127,"line_end":127,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"fn <T> (input: &T, config: Config, buffer: &mut Vec<u8>) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":99436,"byte_end":99455,"line_start":163,"line_end":163,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3590,"byte_end":3598,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3738,"byte_end":3745,"line_start":91,"line_end":91,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3971,"byte_end":3976,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::CharacterSet::Crypt","value":"CharacterSet::Crypt","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3437,"byte_end":3449,"line_start":83,"line_end":83,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"CharacterSet::{Standard, UrlSafe, Crypt}","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3428,"byte_end":3979,"line_start":83,"line_end":96,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":4641,"byte_end":4647,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":4630,"byte_end":4908,"line_start":118,"line_end":125,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":4966,"byte_end":4969,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (char_set: CharacterSet, pad: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":5159,"byte_end":5162,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"pad","qualname":"<Config>::pad","value":"fn (self, pad: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to pad output with `=` characters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":5444,"byte_end":5470,"line_start":142,"line_end":142,"column_start":12,"column_end":38},"name":"decode_allow_trailing_bits","qualname":"<Config>::decode_allow_trailing_bits","value":"fn (self, allow: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to emit errors for nonzero trailing bits.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":5623,"byte_end":5631,"line_start":148,"line_end":148,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":5801,"byte_end":5816,"line_start":155,"line_end":155,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":5983,"byte_end":5991,"line_start":162,"line_end":162,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":6159,"byte_end":6174,"line_start":169,"line_end":169,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":6335,"byte_end":6340,"line_start":176,"line_end":176,"column_start":11,"column_end":16},"name":"CRYPT","qualname":"::CRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per `crypt(3)` requirements\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":6975,"byte_end":6989,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":9201,"byte_end":9211,"line_start":85,"line_end":85,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":9332,"byte_end":9342,"line_start":91,"line_end":91,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14321,"byte_end":14334,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14613,"byte_end":14626,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14947,"byte_end":14960,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":59392,"byte_end":59405,"line_start":77,"line_end":77,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":59792,"byte_end":59805,"line_start":90,"line_end":90,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":63953,"byte_end":63966,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":70797,"byte_end":70810,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":95521,"byte_end":95532,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":96048,"byte_end":96059,"line_start":49,"line_end":49,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3986,"byte_end":3998,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":4915,"byte_end":4921,"line_start":127,"line_end":127,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3097,"byte_end":3104,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3126,"byte_end":3131,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":87}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":6975,"byte_end":6989,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":9201,"byte_end":9211,"line_start":85,"line_end":85,"column_start":10,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\chunked_encoder.rs","byte_start":9332,"byte_end":9342,"line_start":91,"line_end":91,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":0,"index":21}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14321,"byte_end":14334,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14613,"byte_end":14626,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\display.rs","byte_start":14947,"byte_end":14960,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":21}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":59392,"byte_end":59405,"line_start":77,"line_end":77,"column_start":35,"column_end":48},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":59792,"byte_end":59805,"line_start":90,"line_end":90,"column_start":20,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":63953,"byte_end":63966,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":2801}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\write\\encoder.rs","byte_start":70797,"byte_end":70810,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":103},"to":{"krate":2,"index":1572}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":95521,"byte_end":95532,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\decode.rs","byte_start":96048,"byte_end":96059,"line_start":49,"line_end":49,"column_start":23,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":233},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":3986,"byte_end":3998,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\SamratKS\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.10.1\\src\\lib.rs","byte_start":4915,"byte_end":4921,"line_start":127,"line_end":127,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}}]}